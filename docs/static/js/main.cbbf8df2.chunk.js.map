{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiffExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GiffExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OACzCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAkBnBG,YAAY,c,+BCzBPC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UACpDH,GAFkB,+DAIDI,MAAMF,GAJL,cAIdG,EAJc,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXlB,kBAebM,GAfa,4CAAH,sDCENO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAEpB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdf,mBAAU,CAChCsB,KAAK,GACLe,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACN1B,EAAOC,GAAU0B,MAAK,SAAAhB,GAElBiB,YAAW,WACPH,EAAS,CACLjB,KAAKG,EACLY,SAAS,MAEd,UAGR,CAAEtB,IAEEuB,EDhBeK,CAAc5B,GAA/BO,EAFgC,EAEhCA,KAAMe,EAF0B,EAE1BA,QAIb,OAFAN,QAAQC,IAAIV,GAGV,gCACE,oBAAIW,UAAU,MAAd,SAAqBlB,IAGtBsB,GAAW,mBAAGJ,UAAU,wCAAb,6BAEV,qBAAKA,UAAU,YAAf,SAEGX,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEhBnBkB,EAAgB,WAAO,IAAD,EACG5C,mBAAS,CAAC,KADb,mBAC1B6C,EAD0B,KACd9C,EADc,KAMjC,OACE,gCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAKA,6BACG8C,EAAWrB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCjBf+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cbbf8df2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 1) {\r\n      setCategories((cats) => [ inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Buscar\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGif = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=OmRFBMBORJsKv3rKshvOVM7SuWTYPKbA`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log({id, title, url})\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data, loading} = useFetchGifs( category );\r\n\r\n  console.log(data)\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"idk\">{category}</h1>\r\n\r\n\r\n    {loading && <p className=\"card animate__animated animate__flash\"> \"Cargando...\" </p> }\r\n\r\n      <div className=\"card_grid\">\r\n\r\n        {data.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGif} from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState ({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGif(category).then(img => {\r\n\r\n            setTimeout(() => {\r\n                setState({\r\n                    data:img,\r\n                    loading: false\r\n                })\r\n            }, 200)\r\n        })\r\n\r\n    }, [ category ])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GiffExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"\"]);\r\n  // const handleAdd = () => {\r\n  //       setCategories([...categories, \"Digimon\"])\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <h2>GiffExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      \r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n      <ol>\r\n        {categories.map(category => (\r\n          <GifGrid\r\n          key={category}\r\n          category={category}/>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GiffExpertApp} from \"./GiffExpertApp\"\nimport \"./index.css\"\n\nReactDOM.render(\n    <GiffExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}